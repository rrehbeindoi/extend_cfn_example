{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Aurora RDS cluster",
    "Parameters": {
        "InternalDomain": {
            "Description": "The internal domain name.",
            "Type": "String"
        },
        "HostedZoneId": {
            "Description": "The internal dns zone ID.",
            "Type": "AWS::Route53::HostedZone::Id"
        },
        "VpcId": {
            "Description": "VPC ID",
            "Type": "AWS::EC2::VPC::Id"
        },
        "SubnetIds": {
            "Description": "Subnet ID list",
            "Type": "List<AWS::EC2::Subnet::Id>"
        },
        "RDSReaderEndpoint": {
            "Description": "Labmda ARN for getting reader endpoint",
            "Type": "String"
        }
    },
    "Resources": {
        "DatabaseSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Extend CFN Demo DB Security Group",
                "VpcId": {
                    "Ref": "VpcId"
                }
            }
        },
        "DBSubnetGroup": {
            "Type": "AWS::RDS::DBSubnetGroup",
            "Properties": {
                "DBSubnetGroupDescription": "DB Subnet groups",
                "SubnetIds": {
                    "Ref": "SubnetIds"
                }
            }
        },
        "PrimaryDBCluster": {
            "Type": "AWS::RDS::DBCluster",
            "Properties": {
                "DatabaseName": "extendDemo",
                "Engine": "aurora",
                "DBSubnetGroupName": {
                    "Ref": "DBSubnetGroup"
                },
                "MasterUsername": "extendDemo",
                "MasterUserPassword": "change-me",
                "VpcSecurityGroupIds": [
                    {
                        "Fn::GetAtt": [
                            "DatabaseSecurityGroup",
                            "GroupId"
                        ]
                    }
                ]
            },
            "DeletionPolicy": "Snapshot"
        },
        "PrimaryDBDNS": {
            "Type": "AWS::Route53::RecordSet",
            "Properties": {
                "Name": {
                    "Fn::Join": [
                        "",
                        [
                            "mysql.",
                            {
                                "Ref": "InternalDomain"
                            }
                        ]
                    ]
                },
                "HostedZoneId": {
                    "Ref": "HostedZoneId"
                },
                "Type": "CNAME",
                "TTL": "900",
                "ResourceRecords": [
                    {
                        "Fn::GetAtt": [
                            "PrimaryDBCluster",
                            "Endpoint.Address"
                        ]
                    }
                ]
            }
        },
        "PrimaryDBReadOnlyDNSLambda": {
            "Type": "Custom::PrimaryDBReadOnlyDNSLambda",
            "Properties": {
                "ServiceToken": { "Ref": "RDSReaderEndpoint" },
                "DBClusterIdentifier": { "Ref": "PrimaryDBCluster"}
            }
        },
        "PrimaryDBReadOnlyDNS": {
            "Type": "AWS::Route53::RecordSet",
            "Properties": {
                "Name": {
                    "Fn::Join": [
                        "",
                        [
                            "mysql-ro.",
                            {
                                "Ref": "InternalDomain"
                            }
                        ]
                    ]
                },
                "HostedZoneId": {
                    "Ref": "HostedZoneId"
                },
                "Type": "CNAME",
                "TTL": "900",
                "ResourceRecords": [
                    {
                        "Fn::GetAtt": [
                            "PrimaryDBReadOnlyDNSLambda",
                            "ReaderEndpoint"
                        ]
                    }
                ]
            }
        }
    },
    "Outputs": {
        "DatabaseSecurityGroup": {
            "Description": "Security group for Database. Use with DBSecurityGroupIngress for access.",
            "Value": {
                "Fn::GetAtt": [
                    "DatabaseSecurityGroup",
                    "GroupId"
                ]
            }
        }
    }
}
